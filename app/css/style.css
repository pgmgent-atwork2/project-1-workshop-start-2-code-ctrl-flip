:root {
  --orange: #ee9900;
  --white: #ffffff;
  --black: #000000;
  --blue: #3ba3d9;
}

/*1: FONTS*/
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.ttf") format("ttf");
  font-weight: 400;
}

/*2: GENERAL STYLING*/
body {
  margin: 0 auto;
  overflow-x: hidden;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  word-wrap: break-word;
  background-color: var(--black);
  color: var(--white);
}

a {
  text-decoration: none;
  color: var(--blue);
}

a:hover {
  color: var(--orange);
  text-decoration: underline;
  text-decoration-color: var(--orange);
}

/*3: TOP NAVIGATION BAR*/
.logo {
  width: 8rem;
}

.nav-bar {
  display: flex;
  height: 50px;
  width: 100%;
  justify-content: space-around;
  margin-bottom: 1rem;
}

div p {
  text-align: center;
}

.flex {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
}
.flex div {
  margin-left: -4.4375rem;
}

/*4: CARDS*/
.all-cards {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  width: 1230px;
  height: 380px;
  margin: 0 auto;
  gap: 1rem;
}

.card {
  width: 190px;
  height: 280px;
  background: var(--orange);
  border-radius: 15px;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1000px;
}
.card:hover {
  cursor: pointer;
}

.card__inside {
  width: 170px;
  height: 264px;
  background: var(--white);
  border-radius: 15px;
  transform-style: preserve-3d;
  position: relative;
}

.card__image {
  width: 120%;
  height: 130px;
  position: absolute;
  top: 20px;
  object-fit: contain;
}
.card__image--back {
  object-fit: contain;
  width: 100%;
  position: absolute;
  top: 95px;
}
.card__title {
  width: 100%;
  top: 215px;
  position: absolute;
  text-align: center;
  color: var(--black);
  font-size: 29px;
}

.card__front {
  position: absolute;
  display: flex;
  justify-content: center;
  transform: rotateY(180deg);
}

.card__back,
.card__front {
  position: relative;
  backface-visibility: hidden;
  transition: transform 0.5s;
}
.card__back {
  transform: rotateY(0deg);
}
.card.flipped .card__inside {
  transform: rotateY(180deg);
}
.card:not(.flipped) .card__inside {
  transform: rotateY(0deg);
}
